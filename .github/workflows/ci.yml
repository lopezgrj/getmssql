# GitHub Actions CI for Go project
# Runs tests, vet, and lint on push and pull request

name: Go CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Install dependencies
        run: go mod download

      - name: Run go fmt
        run: go fmt ./...

      - name: Run go vet
        run: go vet ./...

      - name: Check formatting
        run: |
          fmtres=$(gofmt -l .)
          if [ -n "$fmtres" ]; then
            echo "The following files are not gofmt'd:"
            echo "$fmtres"
            exit 1
          fi

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: v1.56.2

      - name: Check for outdated dependencies
        run: go list -u -m -mod=readonly all

      - name: Run govulncheck (dependency audit)
        run: go run golang.org/x/vuln/cmd/govulncheck@latest ./...
        continue-on-error: true

      - name: Check go.mod/go.sum tidy
        run: |
          go mod tidy
          git diff --exit-code go.mod go.sum
        shell: bash
        # Fails if go.mod or go.sum are not tidy

      - name: Run tests with coverage
        run: go test -coverprofile=coverage.out ./...

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.out

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

     
